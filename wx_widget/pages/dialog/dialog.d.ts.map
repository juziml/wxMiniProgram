{"version":3,"sources":["../../example/pages/dialog/dialog.ts"],"names":[],"mappings":"","file":"dialog.d.ts","sourcesContent":["// @ts-ignore\nimport Dialog from 'tdesign-miniprogram/dialog/index';\n\nconst title = '对话框标题';\nconst maxTitle = '对话框标题告知当前状态、信息和解决方法，等内容。描述文案尽可能控制在三行内';\nconst message = '告知当前状态、信息和解决方法，等内容。描述文案尽可能控制在三行内';\n\ninterface Config {\n  title: string;\n  tConfirmBtn: string;\n  content: string;\n  confirmBtn: string;\n  cancelBtn: string;\n  buttonLayout: 'horizontal' | 'vertical';\n  actions: boolean | { name: string; primary?: boolean; style?: string }[];\n}\n\nconst dialogConfig: Config = {\n  title: '',\n  tConfirmBtn: '',\n  content: '',\n  confirmBtn: '',\n  cancelBtn: '',\n  buttonLayout: 'horizontal',\n  actions: false,\n};\n\nconst modelConfigFactory = (opt: Partial<Config>) => {\n  return {\n    ...dialogConfig,\n    ...opt,\n  };\n};\n\nPage({\n  data: {\n    show: false,\n    useSlot: false,\n    dialogConfig,\n    currentKey: '',\n    operList: [\n      {\n        title: '反馈类对话框',\n        btns: [\n          {\n            type: 'text',\n            text: '单行标题',\n          },\n          {\n            type: 'multiText',\n            text: '多行标题最大高度',\n          },\n          {\n            type: 'textAndTitle',\n            text: '带说明文本',\n          },\n          {\n            type: 'multiTextAndTitle',\n            text: '带说明文本最大高度',\n          },\n        ],\n      },\n      {\n        title: '确认类对话框',\n        btns: [\n          {\n            type: 'confirm',\n            text: '双按钮',\n          },\n          {\n            type: 'warnConfirm',\n            text: '带警示按钮',\n          },\n          {\n            type: 'tooLongBtnContent',\n            text: '双按钮文字过长',\n          },\n          {\n            type: 'multiBtn',\n            text: '多按钮',\n          },\n        ],\n      },\n      {\n        title: '输入类对话框',\n        btns: [\n          {\n            type: 'withInput',\n            text: '单行标题',\n          },\n          {\n            type: 'textAndTitleWithInput',\n            text: '带说明文本',\n          },\n        ],\n      },\n      {\n        title: '命令调用',\n        btns: [\n          {\n            type: 'commandWithCancel',\n            text: '带取消按钮',\n          },\n          {\n            type: 'command',\n            text: '无取消按钮',\n          },\n        ],\n      },\n    ],\n  },\n\n  /** 切换dialog配置项 */\n  clickHandle(e) {\n    const key = e.detail;\n    switch (key) {\n      // 纯文本弹窗\n      case 'text':\n      case 'multiText': {\n        this.setData({\n          show: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title: key === 'text' ? title : maxTitle,\n            confirmBtn: '知道了',\n          }),\n        });\n        return;\n      }\n      // 标题&副标题弹窗\n      case 'textAndTitle':\n      case 'multiTextAndTitle': {\n        this.setData({\n          show: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title: key === 'textAndTitle' ? title : '对话框带文本最大高度',\n            content: key === 'textAndTitle' ? message : '',\n            confirmBtn: '我知道了',\n          }),\n        });\n        return;\n      }\n      // 确认弹窗-普通\n      case 'confirm': {\n        this.setData({\n          show: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title,\n            content: message,\n            confirmBtn: '按钮最多字数',\n            cancelBtn: '取消',\n          }),\n        });\n        return;\n      }\n      // 确认弹窗-警示操作\n      case 'warnConfirm': {\n        this.setData({\n          show: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title,\n            tConfirmBtn: 'custom-confirm-btn',\n            confirmBtn: '警示操作',\n            cancelBtn: '取消',\n          }),\n        });\n        return;\n      }\n      // 按钮文字过长弹层\n      case 'tooLongBtnContent': {\n        this.setData({\n          show: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title,\n            content: message,\n            confirmBtn: '按钮文案文字内容较长',\n            cancelBtn: '取消',\n            buttonLayout: 'vertical',\n          }),\n        });\n        return;\n      }\n      // 多按钮弹层\n      case 'multiBtn': {\n        this.setData({\n          show: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title,\n            content: message,\n            buttonLayout: 'vertical', // 'horizontal' | 'vertical'\n            actions: [\n              { name: '取消', primary: false },\n              { name: '单行按钮最多十五个字符文案内容', primary: true },\n              { name: '按钮文案文字内容较长', primary: true, style: 'color:red;' },\n            ], // {name: string, primary?: string}\n          }),\n        });\n        return;\n      }\n      // 带输入弹窗\n      case 'withInput':\n      case 'textAndTitleWithInput': {\n        this.setData({\n          show: true,\n          useSlot: true,\n          currentKey: key,\n          dialogConfig: modelConfigFactory({\n            title: '带输入框对话框',\n            content: key === 'withInput' ? '' : message,\n            confirmBtn: '确认',\n            cancelBtn: '取消',\n          }),\n        });\n        return;\n      }\n      case 'commandWithCancel': {\n        Dialog.confirm({\n          title: '弹窗标题',\n          content: '告知当前状态、信息和解决方法等内容。',\n          confirmBtn: '确认按钮',\n          cancelBtn: '取消按钮',\n        });\n        return;\n      }\n      case 'command': {\n        Dialog.confirm({\n          title: '弹窗标题',\n          content: '告知当前状态、信息和解决方法等内容。',\n          confirmBtn: '确认按钮',\n        });\n        return;\n      }\n      default: {\n        Dialog.alert({\n          title: `未知key: ${key}`,\n          content: '',\n        });\n        break;\n      }\n    }\n  },\n\n  /** 异步关闭弹层 */\n  closeHandle() {\n    this.confirmHandle();\n  },\n\n  /** 普通弹层关闭 */\n  confirmHandle() {\n    this.setData({\n      show: false,\n      useSlot: false,\n    });\n  },\n});\n"]}